2022-07-19 11:56:19,462 - mmgen - INFO - Environment info:
------------------------------------------------------------
sys.platform: win32
Python: 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 10:22:32) [MSC v.1900 64 bit (AMD64)]
CUDA available: False
GCC: n/a
PyTorch: 1.8.0+cpu
PyTorch compiling details: PyTorch built with:
  - C++ Version: 199711
  - MSVC 192829337
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)
  - OpenMP 2019
  - CPU capability usage: AVX2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CXX_COMPILER=C:/w/b/windows/tmp_bin/sccache-cl.exe, CXX_FLAGS=/DWIN32 /D_WINDOWS /GR /EHsc /w /bigobj -DUSE_PTHREADPOOL -openmp:experimental -DNDEBUG -DUSE_FBGEMM -DUSE_XNNPACK, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.0, USE_CUDA=0, USE_CUDNN=OFF, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=OFF, USE_OPENMP=ON, 

TorchVision: 0.9.0+cpu
OpenCV: 4.4.0
MMCV: 1.4.8
MMCV Compiler: n/a
MMCV CUDA Compiler: n/a
MMGeneration: 0.7.1+
MMGenerationAdd: 0.1.0+
------------------------------------------------------------

2022-07-19 11:56:19,574 - mmgen - INFO - Distributed training: False
2022-07-19 11:56:19,701 - mmgen - INFO - Config:
model = dict(
    type='LayoutGAN',
    generator=dict(
        type='LayoutNetppGenerator',
        dim_latent=4,
        num_label=5,
        d_model=256,
        nhead=4,
        num_layers=8),
    discriminator=dict(
        type='LayoutNetppDiscriminator',
        num_label=5,
        d_model=256,
        nhead=4,
        num_layers=8,
        max_bbox=50),
    gan_loss=dict(type='GANLoss', gan_type='wgan-logistic-ns'),
    disc_auxiliary_loss=[
        dict(
            type='MSELoss',
            loss_weight=10,
            data_info=dict(pred='bbox_recon', target='bbox_real')),
        dict(
            type='CrossEntropy',
            loss_weight=1,
            data_info=dict(pred='logit_cls', target='target'))
    ])
train_cfg = dict(use_ema=True)
test_cfg = None
optimizer = dict(
    generator=dict(type='Adam', lr=1e-05),
    discriminator=dict(type='Adam', lr=1e-05))
dataset_type = 'Magazine'
train_pipeline = [
    dict(type='LexicographicSort'),
    dict(type='RandomHorizontalFlip', p=0.5)
]
data = dict(
    samples_per_gpu=4,
    workers_per_gpu=0,
    train=dict(
        type='Magazine',
        img_root='E:\comprehensive_library\mmgeneration_add\data\MagImage',
        split='train',
        pipeline=[
            dict(type='LexicographicSort'),
            dict(type='RandomHorizontalFlip', p=0.5)
        ],
        test_mode=False),
    val=dict(
        type='Magazine',
        img_root='E:\comprehensive_library\mmgeneration_add\data\MagImage',
        split='val',
        pipeline=None,
        test_mode=True))
checkpoint_config = dict(interval=500, by_epoch=False, max_keep_ckpts=30)
log_config = dict(interval=1, hooks=[dict(type='TextLoggerHook')])
custom_hooks = [
    dict(
        type='MMGenVisualizationHook',
        output_dir='visual',
        interval=1,
        rerange=False,
        bgr2rgb=False,
        res_name_list=['fake_imgs', 'real_imgs'])
]
runner = dict(
    type='DynamicIterBasedRunner',
    is_dynamic_ddp=False,
    pass_training_status=True)
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 10000)]
find_unused_parameters = True
cudnn_benchmark = True
opencv_num_threads = 0
mp_start_method = 'fork'
lr_config = None
total_iters = 30000
evaluation = dict(
    type='LayoutEvalHook',
    interval=1,
    metrics=dict(type='FID', num_images=3, inception_pkl=None, bgr2rgb=False),
    sample_kwargs=dict(sample_model='ema'))
work_dir = './results'
gpu_ids = [0]

2022-07-19 11:56:19,711 - mmgen - INFO - Set random seed to 2021, deterministic: False, use_rank_shift: False
2022-07-19 11:56:25,182 - mmgen - INFO - FID: Adopt Inception in pytorch style
2022-07-19 11:56:25,182 - mmgen - INFO - Start running, host: 19045845@CNHQ-19045845N, work_dir: E:\comprehensive_library\mmgeneration_add\tools\results
2022-07-19 11:56:25,182 - mmgen - INFO - workflow: [('train', 10000)], max: 30000 iters
2022-07-19 11:56:25,183 - mmgen - INFO - Checkpoints will be saved to ./results\ckpt\results by HardDiskBackend.
2022-07-19 11:56:25,804 - mmgen - INFO - Sample 3 real images for evaluation
2022-07-19 11:56:26,842 - mmgen - INFO - Sample 3 fake images for evaluation
2022-07-19 11:56:42,764 - mmgen - INFO - Now best checkpoint is saved as best_fid_iter_1.pth.
2022-07-19 11:56:42,764 - mmgen - INFO - Best fid is 187.7009 at iter_1.
2022-07-19 11:56:42,765 - mmgen - INFO - Iter(val) [1]	fid: 187.7009, fid_mean: 100.29511260986328, fid_cov: 87.4058
2022-07-19 11:56:43,166 - mmgen - INFO - Sample 3 fake images for evaluation
2022-07-19 11:56:58,526 - mmgen - INFO - Now best checkpoint is saved as best_fid_iter_2.pth.
2022-07-19 11:56:58,526 - mmgen - INFO - Best fid is 176.9945 at iter_2.
2022-07-19 11:56:58,528 - mmgen - INFO - Iter(val) [2]	fid: 176.9945, fid_mean: 96.2998275756836, fid_cov: 80.6947
2022-07-19 11:56:58,866 - mmgen - INFO - Sample 3 fake images for evaluation
